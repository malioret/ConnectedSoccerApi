<?php

namespace Soccer\EventBundle\Entity;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserEventRepository extends \Doctrine\ORM\EntityRepository
{
    
       public function findByEventAndUser($event, $user)
    {
      $query= $this
        ->createQueryBuilder('u')
         ->where("u.event= :event and u.user=:user ")
           ->setParameter(':event',$event)
           ->setParameter(':user',$user)
         ->orderBy('u.id', 'ASC')
        ->getQuery()
        ;
          try {
        return $query->getSingleResult();
    } catch (\Doctrine\ORM\NoResultException $e) {
        return null;
    }
        
        
      ;
    }
    
    
    
      public function findByUserParticipe($event)
    {
      $query= $this
        ->createQueryBuilder('u')
         ->where("u.event= :event and u.status=1 ")
           ->setParameter(':event',$event)
         ->orderBy('u.id', 'ASC')
        ->getQuery()
        ;
          try {
        return $query->getResult();
    } catch (\Doctrine\ORM\NoResultException $e) {
        return null;
    }
        
        
      ;
    }
    
    
    public function  findByUserParticipeAndAttente($event)
    {
       $query= $this
        ->createQueryBuilder('u')
         ->where("u.event= :event and u.status!=3 ")
           ->setParameter(':event',$event)
         ->orderBy('u.id', 'ASC')
        ->getQuery()
        ;
          try {
        return $query->getResult();
    } catch (\Doctrine\ORM\NoResultException $e) {
        return null;
    }
        
        
      ;
    }
    
    
    public function  findByUserParticipeAndAttenteNiveau($event)
    {
       $query= $this
        ->createQueryBuilder('u')
        ->join('u.user', 'user')
            ->addSelect('user')
         ->where("u.event= :event and u.status!=3 ")
           ->setParameter(':event',$event)
            ->orderBy('user.niveau', 'DESC')
        ->getQuery()
        ;
          try {
        return $query->getResult();
    } catch (\Doctrine\ORM\NoResultException $e) {
        return null;
    }
        
        
      ;
    }
    
}


